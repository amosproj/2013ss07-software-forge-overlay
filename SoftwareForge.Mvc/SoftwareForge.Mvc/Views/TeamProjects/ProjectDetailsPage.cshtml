<!-- 
 - Copyright (c) 2013 by Denis Bach, Marvin Kampf, Konstantin Tsysin, Taner Tunc, Florian Wittmann
 -
 - This file is part of the Software Forge Overlay rating application.
 -
 - This program is free software: you can redistribute it and/or modify
 - it under the terms of the GNU Affero General Public License as
 - published by the Free Software Foundation, either version 3 of the
 - License, or (at your option) any later version.
 -
 - This program is distributed in the hope that it will be useful, 
 - but WITHOUT ANY WARRANTY; without even the implied warranty of
 - MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 - GNU Affero General Public License for more details.
 -
 - You should have received a copy of the GNU Affero General Public
 - License along with this program. If not, see
 - <http://www.gnu.org/licenses/>.
 -->

@using SoftwareForge.Common.Models
@model Project
@{
    List<ProjectMember> projectOwners = Model.Users.Where(t => t.UserRole == UserRole.ProjectOwner).ToList();
    List<ProjectMember> contributors = Model.Users.Where(t => t.UserRole == UserRole.Contributor).ToList();
    ProjectMember user = @Model.Users.SingleOrDefault(t => t.User.Username.Equals(User.Identity.Name));
    bool isUserMember = user != null;
    
    }
<p>Project Details - @Html.ActionLink("[Code View]", "CodeView", "TeamProjects", new {guid = Model.Guid}, null) -  @Html.ActionLink("[Bug View]", "WorkItemsView", "TeamProjects", new { guid = Model.Guid }, null) - 
    @Html.ActionLink("[Wiki View]", "WikiView", "Wiki", new { guid = Model.Guid }, null)</p>

<p>
    <b>@Model.Name</b>
    @if (@Model.Users.Any(t => (t.User.Username.Equals(User.Identity.Name)) && (t.UserRole == UserRole.ProjectOwner))){
     
        @Html.ActionLink("[Rename]", "RenameProjectPage", "TeamProjects",new {guid=Model.Guid},null)
    }
    @Html.ActionLink("[Fork project]", "ForkProject", "TeamProjects", new {guid = Model.Guid}, null)<br/>

    TFS-Project: @Model.TfsName

    <br/>
    @Model.Description<br/>
    <i>@Model.ProjectType</i><br/>
    

    
    @if (isUserMember)
    {

        if (user.UserRole == UserRole.Contributor)
         {
             @Html.ActionLink("[Leave as Contributor]", "LeaveProject", "TeamProjects", new {projectGuid = Model.Guid, username = User.Identity.Name, role = UserRole.Contributor}, null)
         }
         else if (user.UserRole == UserRole.ProjectOwner)
         {
             if (projectOwners.Count() > 1)
             {
                 @Html.ActionLink("[Leave as Owner]", "LeaveProject", "TeamProjects", new {projectGuid = Model.Guid, username = User.Identity.Name, role = UserRole.ProjectOwner}, null)
             }
         }
         else
         {
             @Html.ActionLink("[Unwatch]", "UnwatchProject", "TeamProjects", new {guid = Model.Guid, username = User.Identity.Name}, null)
         }
    }
    else
        {
            @Html.ActionLink("[Watch]", "WatchProject", "TeamProjects", new {guid = Model.Guid, username = User.Identity.Name}, null)
        }
    

    @if (!isUserMember || user.UserRole != UserRole.ProjectOwner)
    {
        @Html.ActionLink("[Create join request]", "CreateProjectJoinRequest", "TeamProjects", new {guid = Model.Guid}, null)
    }
    @if (isUserMember && (user.UserRole == UserRole.ProjectOwner))
    {
        @Html.ActionLink("[Invite a User]", "CreateInvitationRequest", "TeamProjects", new {guid = Model.Guid}, null)
    }
    <br/>
    

    @if (projectOwners.Any())
    {
        <b class="clear-fix">ProjectOwner:</b>
        foreach (ProjectMember projectMember in projectOwners)
        {
            @Html.Partial("UserPartial", projectMember);
        }
        <span class="clear-fix"></span>
    }
        
    @if (contributors.Any())
    {
        <b class="clear-fix">Contributor:</b>
        foreach (ProjectMember projectMember in contributors)
        {
            @Html.Partial("UserPartial", projectMember);
        }
        <span class="clear-fix"></span>
    }

</p>
